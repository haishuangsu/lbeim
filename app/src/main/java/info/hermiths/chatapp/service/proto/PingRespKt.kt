// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: msggateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import info.hermiths.chatapp.service.proto.IMMsg

@kotlin.jvm.JvmName("-initializepingResp")
public inline fun pingResp(block: PingRespKt.Dsl.() -> kotlin.Unit): IMMsg.PingResp =
  PingRespKt.Dsl._create(IMMsg.PingResp.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `PingResp`
 */
public object PingRespKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: IMMsg.PingResp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: IMMsg.PingResp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): IMMsg.PingResp = _builder.build()

    /**
     * `string Pong = 1;`
     */
    public var pong: kotlin.String
      @JvmName("getPong")
      get() = _builder.pong
      @JvmName("setPong")
      set(value) {
        _builder.pong = value
      }
    /**
     * `string Pong = 1;`
     */
    public fun clearPong() {
      _builder.clearPong()
    }

    /**
     * `.MsgType msgType = 2;`
     */
    public var msgType: IMMsg.MsgType
      @JvmName("getMsgType")
      get() = _builder.msgType
      @JvmName("setMsgType")
      set(value) {
        _builder.msgType = value
      }
    /**
     * `.MsgType msgType = 2;`
     */
    public fun clearMsgType() {
      _builder.clearMsgType()
    }
    /**
     * `.MsgType msgType = 2;`
     * @return Whether the msgType field is set.
     */
    public fun hasMsgType(): kotlin.Boolean {
      return _builder.hasMsgType()
    }

    public val PingRespKt.Dsl.msgTypeOrNull: IMMsg.MsgType?
      get() = _builder.msgTypeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun IMMsg.PingResp.copy(block: PingRespKt.Dsl.() -> kotlin.Unit): IMMsg.PingResp =
  PingRespKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val IMMsg.PingRespOrBuilder.msgTypeOrNull: IMMsg.MsgType?
  get() = if (hasMsgType()) getMsgType() else null

